using SensorIssues.Sensors;
using System.Windows.Forms;

namespace SensorIssues
{
    /// <summary>
    /// The form's job is to retain the sensors and dispose them when closing.
    /// </summary>
    /// <remarks>
    /// <para>
    /// General "Best Practice" guidelines (used here) :
    /// Anything that should not be public is private
    /// Objects/Classes have only one task
    /// Names are understanble and non-ambiguous
    /// One dot per line
    /// Related to previous : Objects know only their direct neighbours
    /// Use of Dependency Injection, only the Builder creates stuff
    /// Max one indentation level per method 
    /// (except for Dispose pattern, because it is a standard Microsoft pattern, autogenerated)
    /// DRY (Don't Repeat Yourself)
    /// </para>
    /// <para>
    /// As an exercise, you can add a ListBox in order to display the Exceptions' messages
    /// when they occur.
    /// </para>
    /// </remarks>
    public partial class DisplaySensorValueForm : Form
    {
        private SensorDisplayerCollection sensors;

        public DisplaySensorValueForm()
        {
            InitializeComponent();
            InitSensors();
        }

        private void InitSensors()
        {
            SensorBuilder sensorBuilder = new SensorBuilder();
            sensorBuilder.BuildSensor(lblValueSensor1, lblErrorRateSensor1);
            sensorBuilder.BuildSensor(lblValueSensor2, lblErrorRateSensor2);
            sensorBuilder.BuildSensor(lblValueSensor3, lblErrorRateSensor3);
            sensors = sensorBuilder.Sensors;
        }

        private void DisplaySensorValueForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            /*
             * We must do this before the form is closed.
             * If we do not, a sensor update might rise and try to update a label
             * on a form that does not have a graphic handle anymore.
             * 
             * Although not necessary here, the use of the Dispose pattern is best practice,
             * because everybody knows what it is supposed to do
             */
            sensors.Dispose();
            sensors = null;
        }
    }
}
